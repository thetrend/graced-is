---
import NavMenu from "../components/NavMenu.astro";
import ThemeToggle from "../components/ThemeToggle.astro";
import { cn } from "../lib/utils";
import "../styles/global.css";

interface Props {
  title: string;
  description: string;
  category?: string | "Uncategorized";
  tags?: string[];
  image?: string;
  className?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image = "/static/blog-placeholder.png",
  className,
} = Astro.props;
---

<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Font preloads -->
    <link
      rel="preload"
      href="/fonts/geist-variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/geist-mono-variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
  </head>
  <body
    class={cn(
      "overscroll-none min-h-screen flex flex-col text-gray-800 font-sans",
      className,
    )}
  >
    <NavMenu />

    <div
      class="mb-6 flex w-full flex-grow flex-col justify-evenly border-b border-gray-300 px-6 pb-20 dark:border-gray-800 lg:mx-auto"
    >
      <div class="prose mx-auto my-10 w-full md:w-2/3">
        <slot />
      </div>
    </div>

    <aside class="mx-auto mb-10 w-full px-6 md:w-2/3">
      <h2 class="my-4"><a class="font-sans text-lg">about me</a></h2>
      <p>
        NW CT-based. Software engineer by day, amateur writer, cook, baker, and
        traditional/digital artist by night. Occasional early career mentor.
        Community organizer at <a href="https://newhaven.io" target="_blank"
          >newhaven.io</a
        >. Obsessed with the internet since 2003.
      </p>
    </aside>
    <div
      class="mb-10 flex min-w-full flex-col items-center border-t border-gray-300 px-6 pt-6 dark:border-gray-800 lg:flex-row lg:justify-between"
    >
      <span>&copy; 2025, grace de la Mora.</span>
      <ThemeToggle />
      <span
        >Theme inspired by <a href="https://wordpress.org/themes/pulitzer/"
          >Pulitzer</a
        >.</span
      >
    </div>
  </body>
</html>

<script is:inline>
  const setTheme = () => {
    let theme;

    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      theme = localStorage.getItem("theme");
    } else {
      theme = window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }

    document.documentElement.classList[theme ? "add" : "remove"](theme);

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  };

  setTheme();

  document.addEventListener("astro:after-swap", setTheme);
</script>
