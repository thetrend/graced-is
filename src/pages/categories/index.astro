---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { formatDate } from "../../lib/utils";

const posts = await getCollection("posts");

// Normalize and group posts by category
const postsByCategory = posts.reduce(
  (acc, post) => {
    const categories = Array.isArray(post.data.category)
      ? post.data.category
      : [post.data.category];

    for (const category of categories) {
      const key = category?.toLowerCase() ?? "uncategorized";
      if (!acc[key]) acc[key] = { name: category, posts: [] };
      acc[key].posts.push(post);
    }

    return acc;
  },
  {} as Record<string, { name: string; posts: typeof posts }>,
);
---

<BaseLayout title="Categories" description="Browse all categories">
  <main class="p-6">
    <h1 class="mb-8 text-2xl lowercase">All Categories</h1>
    {
      Object.keys(postsByCategory).length === 0 ? (
        <p>No categories found.</p>
      ) : (
        <ul class="mx-auto">
          {Object.entries(postsByCategory).map(([key, group]) => (
            <li>
              <h2 class="mb-3 text-left text-lg font-semibold">
                <a
                  href={`/categories/${encodeURIComponent(key)}`}
                  class="text-fuchsia-600 hover:underline"
                >
                  {group.name}
                </a>
              </h2>
              <ul>
                {group.posts.map((post, index) => {
                  const slugPath = Array.isArray(post.slug)
                    ? post.slug.join("/")
                    : post.slug;
                  return (
                    <li
                      class={
                        index === 0
                          ? "flex gap-10 border-y border-gray-300 px-4"
                          : "flex gap-10 border-b border-gray-300 px-4"
                      }
                    >
                      <a
                        href={`/posts/${slugPath}`}
                        class="group flex w-full gap-3 hover:bg-fuchsia-50 active:bg-fuchsia-100"
                      >
                        <span class="text-zinc-500 dark:text-zinc-50">
                          {formatDate(post.data.date)}
                        </span>
                        <span class="group-hover:underline">
                          {post.data.title}
                        </span>
                      </a>
                    </li>
                  );
                })}
              </ul>
            </li>
          ))}
        </ul>
      )
    }
  </main>
</BaseLayout>
